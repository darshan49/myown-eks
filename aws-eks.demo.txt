apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: eks-demo
  region: us-east-1
nodeGroups:
  - name: ng-1 #clusternode Group Name
    instanceType: t2.micro #disired Instance Type
    desiredCapacity: 3 #desired nodes count / capacity
    ssh:
     allow: false








depoyment.yaml  (# throuh aws ecr images we need to specify in container image place)

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: mean-demo
    app.kubernetes.io/instance: mean-demo-instance
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
  name: mean-demo-deployment
spec:
  replicas: 1
  selectors:
    matchLabels:
      app: mean-demo
  template:
    metadata:
      labels:
        app: mean-demo
    spec:
      containers:
          image:
          imagePullPolicy: Always
          name: mean-demo
          ports:
            - containerPort: 4040
3) kubernetes Dashboard eks-admin-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eks-admin
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: eks-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: eks-admin
  namespace: kube-system


----
4) service.yaml for wordpress

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mean-demo4
    app.kubernetes.io/instance: mean-demo-instance
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/component: backend
  name: mean-demo4
spec:
  selector:
    app: mean-demo4
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4040

5) service.yaml for nginx


apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mean-demo4
    app.kubernetes.io/instance: mean-demo-instance
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/component: backend
  name: mean-demo4
spec:
  selector:
    app: nginx
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      
6) nginx deployment file

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: nginx-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      labels:
        run: nginx
    spec:
      containers:
      - image: nginx
        name: nginx




github justmeopen-source= justmeandopensource/kubernetes


--- 
tiller deployment file

apiVersion: v1
kind: ServiceAccount
metadata:
  name: tiller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: tiller
    namespace: kube-system



---- 
Helm3

Helm install document : https://github.com/darshan49/helm


helm install stable/jenkins --values /tmp/jenkins.values --generate-name # for jenkins

helm inspect values stable/jenkins > /tmp/jenkins.values


